#!/bin/sh
#
# Copyright (c) 2016, 2017 aured <aured+prj@protonmail.com>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

TODO_FILE="$HOME/.todo"
TMP_FILE="/tmp/$(basename ${TODO_FILE}).tmp"
INTERVAL=10
STYLE=-1

item_append() {
    local _nb _mode
    _nb='$'
    _mode='a'

    item_new "${_nb}" "${_mode}"
}

item_delete() {
    local _nb _mode _answer
    _nb=$1
    _mode='d'

    item_view "${_nb}" "${TODO_FILE}"
    echo -n "Remove it? [no] "
    read -r _answer
    case ${_answer} in
        y|yes)
            item_write "${_nb}" "${_mode}" "" "${TODO_FILE}" "${TMP_FILE}"
            ;;
    esac
}

item_edit() {
    local _nb _mode
    _nb=$1
    _mode='c'

    item_view "${_nb}" "${TODO_FILE}"
    item_new "${_nb}" "${_mode}"
}

item_empty() {
    [ -z "${1}" ] && exit 1
}

item_insert() {
    local _nb _mode
    _nb=$1
    _mode='i'

    item_number "${_nb}"
    item_new "${_nb}" "${_mode}"
}

item_move() {
    local _nb _mode _new_nb _item
    _nb=$1

    item_number "${_nb}"
    echo -n "New line number: "
    read -r _new_nb
    item_number "${_new_nb}"

    _item=$(sed -n "${_nb}p" "${TODO_FILE}")
    item_empty "${_item}"

    _mode='d'
    item_write "${_nb}" "${_mode}" "" "${TODO_FILE}" "${TMP_FILE}"
    _mode='i'
    item_write "${_new_nb}" "${_mode}" "${_item}" "${TODO_FILE}" "${TMP_FILE}"
}

item_new() {
    local _nb _mode _new_item
    _nb=$1
    _mode=$2

    echo -n "New item: "
    read -r _new_item
    item_empty "${_new_item}"
    item_write "${_nb}" "${_mode}" "${_new_item}" "${TODO_FILE}" "${TMP_FILE}"
}

item_number() {
    local _nb
    _nb=$1

    case ${_nb} in
        ''|*[!1-9]*)
            exit 1
            ;;
    esac
}

item_purge() {
    local _todo_file _answer
    _todo_file=$1

    echo -n "Purge todo file? [no] "
    read -r _answer
    case ${_answer} in
        y|yes)
            : > "${_todo_file}"
            echo "Todo file purged!"
            ;;
    esac
}

item_view() {
    local _nb _todo_file _item
    _nb=$1
    _todo_file=$2

    item_number "${_nb}"
    _item=$(sed -n "${_nb}p" "${_todo_file}")
    item_empty "${_item}"
    echo "Item ${_nb}: ${_item}"
}

item_write() {
    local _nb _mode _new_item _todo_file _tmp_file
    _nb=$1
    _mode=$2
    _new_item=$3
    _todo_file=$4
    _tmp_file=$5

    if [ -s "${_todo_file}" ]; then
        sed -e "${_nb} ${_mode} ${_new_item}" "${_todo_file}" > \
             "${_tmp_file}"
        cat "${_tmp_file}" > "${_todo_file}"
        rm "${_tmp_file}"
    else
        echo "${_new_item}" > "${_todo_file}"
    fi
}

todo_list() {
    local _style _todo_file
    _style=$1
    _todo_file=$2

    case ${_style} in
        0)
            cat "${_todo_file}"
            ;;
        1)
            echo " ."
            echo "..: TODO"
            echo "======================================================================="
            nl -s' >> ' -w 4 -n rz -b a "${_todo_file}"
            ;;
        2)
            nl -s'. ' -w 1 -b a "${_todo_file}"
            ;;
        *)
            echo ""
            echo "                    TODO"
            echo "      <<---------------------------->>"
            echo ""
            nl -b a "${_todo_file}"
            echo ""
            ;;
    esac
}

todo_loop() {
    while true; do
        clear
        todo_list "${STYLE}" "${TODO_FILE}"
        sleep ${INTERVAL}
    done
}

usage() {
    echo "\
usage: todo [-ahlP] [-f todo_file] [-s style_number] [-d|-e|-i|-m line_number]"
    exit 1
}

while getopts "ad:e:f:hi:lm:Ps:" _opt; do
    case ${_opt} in
        a) action="append" ;;
        d) action="delete" && nb_item="${OPTARG}" ;;
        e) action="edit" && nb_item="${OPTARG}" ;;
        f) TODO_FILE="${OPTARG}" ;;
        i) action="insert" && nb_item="${OPTARG}" ;;
        l) action="loop" ;;
        m) action="move" && nb_item="${OPTARG}" ;;
        P) action="purge" ;;
        s) STYLE="${OPTARG}" ;;
        *) usage ;;
    esac
done

[ -f "${TODO_FILE}" ] || touch "${TODO_FILE}"
case ${action} in
    append) item_append ;;
    delete) item_delete "${nb_item}" ;;
    edit) item_edit "${nb_item}" ;;
    insert) item_insert "${nb_item}" ;;
    move) item_move "${nb_item}" ;;
    loop) todo_loop ;;
    purge) item_purge "${TODO_FILE}" ;;
    *) todo_list "${STYLE}" "${TODO_FILE}" ;;
esac

exit 0
