#!/bin/sh
#
# Copyright (c) 2016 aujecied <ajcd+prj@opmbx.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

TODO_FILE=$HOME/.todo
TMP_FILE=/tmp/todofile

add() {
    new
    _nb_item=$
    _mode=a
    write
}

del() {
    item
    echo "${_nb_item}  ${_item}"
    echo -n "Remove item ${_nb_item}? [no] "
    read _answer
    case ${_answer} in
        y|yes)
            _mode=d
            write
            ;;
    esac
}

edit() {
    item
    echo "Old item: ${_item}"
    new
    _mode=c
    write
}

item() {
    _nb_item=${OPTARG}
    _item=$(sed -n "${_nb_item}p" ${TODO_FILE})
    void "${_item}"
}

list() {
    echo ""
    echo "                    TODO"
    echo "      <<---------------------------->>"
    echo ""
    nl -b a ${TODO_FILE}
    echo ""
}

loop() {
    while true; do
        clear
        list
        sleep 5
    done
}

new() {
    echo -n "New item: "
    read _new_item
    void "${_new_item}"
}

purge() {
    echo -n "Purge todo file? [no] "
    read _answer
    case ${_answer} in
        y|yes)
            :> ${TODO_FILE}
            echo "Todo file purged!"
            ;;
    esac
}

usage() {
    echo "usage: todo [-achlP] [-d line_number] [-e line_number]"
    exit 1
}

void() {
    if [ -z "${1}" ]; then
        exit 1
    fi
}

write() {
    if [ -s "${TODO_FILE}" ]; then
        sed -e "${_nb_item} ${_mode} ${_new_item}" ${TODO_FILE} > ${TMP_FILE}
        mv ${TMP_FILE} ${TODO_FILE}
    else
        echo "${_new_item}" > ${TODO_FILE}
    fi
}

[ -f "${TODO_FILE}" ] || touch ${TODO_FILE}
while getopts "acd:e:hlP" _opt; do
    case ${_opt} in
        a) add ;;
        c) clear && list ;;
        d) del ;;
        e) edit ;;
        l) loop ;;
        P) purge ;;
        *) usage ;;
    esac
done
[ ${#} -eq 0 ] && list

exit 0
